---
- name: client_keys | Create openvpn ovpn file directory
  ansible.builtin.file:
    path: "{{ openvpn_ovpn_dir }}"
    state: directory
    mode: "{{ openvpn_ovpn_dir_perm }}"
    owner: root
    group: "{{ openvpn_ovpn_dir_group }}"

- name: client_keys | Copy openssl client extensions
  ansible.builtin.copy:
    src: openssl-client.ext
    dest: "{{ openvpn_key_dir }}"
    owner: "{{ openvpn_conf_user }}"
    group: "{{ openvpn_conf_group }}"
    mode: "0400"

- name: client_keys | Generate client key
  ansible.builtin.command:
    argv:
      - openssl
      - req
      - -nodes
      - -newkey
      - rsa:{{ openvpn_rsa_bits }}
      - -keyout
      - "{{ item }}.key"
      - -out
      - "{{ item }}.csr"
      - -subj
      - /CN=OpenVPN-Client-{{ inventory_hostname[:24] }}-{{ item[:24] }}/
    chdir: "{{ openvpn_key_dir }}"
    creates: "{{ item }}.key"
  with_items:
    - "{{ openvpn_clients }}"

- name: client_keys | Protect client keys
  ansible.builtin.file:
    path: "{{ openvpn_key_dir }}/{{ item }}.key"
    mode: "0400"
  with_items:
    - "{{ openvpn_clients }}"

- name: client_keys | Sign client key
  ansible.builtin.command: openssl x509 -req -in {{ item }}.csr -out {{ item }}.crt -CA ca.crt -CAkey ca-key.pem -sha256 -days 3650 -extfile openssl-client.ext
  args:
    chdir: "{{ openvpn_key_dir }}"
    creates: "{{ item }}.crt"
  with_items:
    - "{{ openvpn_clients }}"

- name: client_keys | Register server ca key
  ansible.builtin.slurp:
    src: "{{ openvpn_key_dir }}/ca.crt"
  register: __ca_cert

- name: client_keys | Register tls-auth key
  ansible.builtin.slurp:
    src: "{{ openvpn_key_dir }}/ta.key"
  when: openvpn_tls_auth_required is truthy
  register: __tls_auth

- name: client_keys | Register tls-crypt key
  ansible.builtin.slurp:
    src: "{{ openvpn_key_dir }}/tls-crypt.key"
  when: openvpn_use_tls_crypt is truthy
  register: __tls_crypt

- name: client_keys | Register client certs
  ansible.builtin.slurp:
    src: "{{ openvpn_key_dir }}/{{ item }}.crt"
  with_items:
    - "{{ openvpn_clients }}"
  register: __client_certs

- name: client_keys | Register client keys
  ansible.builtin.slurp:
    src: "{{ openvpn_key_dir }}/{{ item }}.key"
  with_items:
    - "{{ openvpn_clients }}"
  register: __client_keys

- set_fact:
    openvpn_port_conf:
      udp: "{{openvpn_listen | d([]) | selectattr('proto', '==', 'udp') | map(attribute='port') }}"
      tcp: "{{openvpn_listen | d([]) | selectattr('proto', '==', 'tcp') | map(attribute='port') }}"
    __openvpn_addl_client_options: "{{openvpn_addl_client_options | d([])}}"

- set_fact:
    openvpn_remote:
      udp: >
        {{
                ["remote " + openvpn_server_hostname ] | product(openvpn_port_conf.udp[1:]) | map('join', ' ')
        }}
      tcp: >
        {{
                ["remote " + openvpn_server_hostname ] | product(openvpn_port_conf.tcp[1:]) | map('join', ' ')
        }}

- name: Generate client config
  include_tasks: client_keys_proto.yml
  vars:
    openvpn_port: "{{openvpn_port_conf[openvpn_proto] | first}}"
    openvpn_addl_client_options: "{{__openvpn_addl_client_options + openvpn_remote[openvpn_proto]}}"
  loop: ['tcp', 'udp']
  loop_control:
    loop_var: openvpn_proto
    label: "Generate client config for {{openvpn_proto}}"
